\section{introduction}
Go is an abstract strategy board game for two players, in which the aim is to surround more territory than the opponent. The objective of the game is to surrounded a larger total area of the board with one's stones than the opponent by the end of the game, which is reached when neither player wishes to make another move.

The basic rule is simple.~\cite{AlphaGoRuleIsSimple} This simplicity, though, is deceptive. In a truly simple game, like noughts and crosses, every possible outcome, all the way to the end of a game, can be calculated. This brute-force approach means a computer can always work out which move is the best in a given situation. The most complex game to be "solved" this way is draughts, in which around 1020 (a hundred billion billion) different matches are possible. In 2007, after 18 years of effort, researchers announced that they had come up with a provably optimum strategy.

But a draughts board is only 8x8. A Go board size means that the number of games that can be played on it is enormous: a rough-and-ready guess gives around 10170. Analogies fail when trying to describe such a number. It is nearly a hundred of orders of magnitude more than the number of atoms in the observable universe, which is somewhere in the region of 1080. Any one of Go's hundreds of turns has about 250 possible legal moves, a number called the branching factor. Choosing any of those will throw up another 250 possible moves, and so on until the game ends. As Demis Hassabis, one of DeepMind's founders, observes, all this means that Go is impervious to attack by mathematical brute force.

But there is more to the game's difficulty than that. Though the small board and comparatively restrictive rules of chess mean there are only around 1047 different possible games, and its branching factor is only 35, that does, in practice, mean chess is also unsolvable in the way that draughts has been solved. Instead, chess programs filter their options as they go along, selecting promising-looking moves and reserving their number-crunching prowess for the simulation of the thousands of outcomes that flow from those chosen few. This is possible because chess has some built-in structure that helps a program understand whether or not a given position is a good one. A knight is generally worth more than a pawn, for instance; a queen is worth more than either.

Working out who is winning in Go is much harder. A stone's value comes only from its location relative to the other stones on the board, which changes with every move. At the same time, small tactical decisions can have, as many Go player knows, huge strtegic consequences later on. There is plenty of structure - Go players talk of features such as ladders, walls and false eyes - but these emerge organically from the rules, rather than being prescribed by them.
\begin{figure*}[!ht]
  \caption{Go rating system.}
  \centering
    \includegraphics[width=0.9\textwidth]{GoRatingSystem.png}
\end{figure*}
\begin{figure*}[!ht]
  \caption{Go special situation.}
  \centering
    \includegraphics[width=0.9\textwidth]{GoSpecialSituation.png}
\end{figure*}
Even good players are not able to talk about the exact strategies. It seems like that, this game is more about intuition, which is different from the computer programming job.

Different methods have been proposed to solve this problem.
\begin{table}
	\centering
	\begin{tabular}{cccc}
		\toprule
       	      Prospect   & Chess    	       & Go     \\ \otoprule
	Braching factor  & $15 \times 2^{14}$  &   32KB \\ \midrule
	Size of board    & $15 \times 2^{13}$  &   64KB \\ \midrule
From amateur to professional     & $15 \times 2^{12}$  &  128KB \\ \midrule
		512B     & $15 \times 2^{11}$  &  256KB \\ \midrule
		 1KB     & $15 \times 2^{10}$  &  512KB \\ \midrule
		 2KB     & $15 \times 2^{9}$   &    1MB \\ \midrule
		 4KB     & $15 \times 2^{8}$   &    2MB \\ \midrule
		 8KB     & $15 \times 2^{7}$   &    4MB \\ \midrule
		16KB     & $15 \times 2^{6}$   &    8MB \\ \bottomrule
		\end{tabular}
		\caption{The comparison between Chess and Go.}
		\label{table:ComparisonOfChessAndGo}
\end{table}
%
%\begin{figure}[!ht]
%  \caption{The complexity comparison of different board games}
%  \centering
%    \includegraphics[width=0.5\textwidth]{MCTS.png}
%\end{figure}
